{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/gallery.jsx","components/Team.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","style","marginBottom","Header","data","title","paragraph","About","alt","mission","Services","map","d","i","icon","name","text","Gallery","color","Team","img","job","initialState","email","message","Contact","useState","address","whiteSpace","phone","facebook","twitter","youtube","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Carrer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1b63cbbd.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='page-scroll' href='#page-top'>\r\n            <img className=\"logo\" src='img/quest-logo.png' style={{marginBottom: '10px'}}/>\r\n          </a>\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            {/* <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Features\r\n              </a>\r\n            </li> */}\r\n            <li>\r\n              <a href='#about' className='page-scroll'>\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#services' className='page-scroll'>\r\n                Services\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#portfolio' className='page-scroll'>\r\n                Carrer\r\n              </a>\r\n            </li>\r\n            {/* <li>\r\n              <a href='#testimonials' className='page-scroll'>\r\n                Testimonials\r\n              </a>\r\n            </li> */}\r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Team\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#contact' className='page-scroll'>\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","export const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                <h1>\r\n                  {props.data ? props.data.title : 'Loading'}\r\n                  <span></span>\r\n                </h1>\r\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                <a\r\n                  href='#about'\r\n                  className='btn btn-custom btn-lg page-scroll'\r\n                >\r\n                  Learn More\r\n                </a>{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const About = (props) => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            {\" \"}\r\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <div className=\"about-text\">\r\n              <h2>About Us</h2>\r\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\r\n              <b>Our Mission: </b><p>{props.data ? props.data.mission : \"loading...\"}</p>\r\n              <b>Our Vision: </b><p>{props.data ? props.data.mission : \"loading...\"}</p>\r\n              {/* <h3>Why Choose Us?</h3>\r\n              <div className=\"list-style\">\r\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why.map((d, i) => (\r\n                          <li key={`${d}-${i}`}>{d}</li>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why2.map((d, i) => (\r\n                          <li key={`${d}-${i}`}> {d}</li>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const Services = (props) => {\r\n  return (\r\n    <div id='services' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>Our Services</h2>\r\n          <p>\r\n          Content Development can be really tough and time taking matter. If you are struggling to develop handsome quality of content, we are here and happily ready to help you!\r\n          </p>\r\n        </div>\r\n        <div className='row '>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='card justify-content-around' >\r\n                  <i className={d.icon}></i>\r\n                  <div className='service-desc'>\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n            </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Image } from \"./image\";\r\n\r\nexport const Gallery = (props) => {\r\n  return (\r\n    <div id='portfolio' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>Carrer</h2>\r\n          <p>\r\n          {props.data\r\n              ? props.data.title\r\n              : 'Loading...'}\r\n          </p>\r\n          <p>\r\n          Please drop an email for any query related carrier to \r\n          </p>\r\n          <h3 style={{ color: 'red' }}>recruitment.questsolutions@gmail.com </h3>\r\n          \r\n        </div>\r\n        {/* <div className='row'>\r\n          <div className='portfolio-items'>\r\n            {props.data\r\n              ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\r\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\r\n                </div>\r\n              ))\r\n              : 'Loading...'}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Team = (props) => {\r\n  return (\r\n    <div id='team' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-8 col-md-offset-2 section-title'>\r\n          <h2>Meet the Team</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed\r\n            dapibus leonec.\r\n          </p>\r\n        </div>\r\n        <div id='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\r\n                  <div className='thumbnail'>\r\n                    {' '}\r\n                    <img src={d.img} alt='...' className='team-img' />\r\n                    <div className='caption'>\r\n                      <h4>{d.name}</h4>\r\n                      <p>{d.job}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport emailjs from 'emailjs-com'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  message: '',\r\n}\r\nexport const Contact = (props) => {\r\n  const [{ name, email, message }, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(name, email, message)\r\n    emailjs\r\n      .sendForm(\r\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text)\r\n          clearState()\r\n        },\r\n        (error) => {\r\n          console.log(error.text)\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <div>\r\n      <div id='contact'>\r\n        <div className='container'>\r\n          <div className='col-md-3 col-md-offset-1 contact-info'>\r\n            <div className='contact-item'>\r\n              <h3>Contact Info</h3>\r\n              <p>\r\n                <span>\r\n                  <i className='fa fa-map-marker'></i> Address\r\n                </span>\r\n                {props.data ? props.data.address : 'loading'}\r\n              </p>\r\n            </div>\r\n            <div className='contact-item'>\r\n              <p>\r\n                <span>\r\n                  <i className='fa fa-phone'></i> Phone\r\n                </span>{' '}\r\n                <span style={{ whiteSpace: 'pre-wrap' }}> {props.data ? props.data.phone : 'loading'}</span>\r\n               \r\n              </p>\r\n            </div>\r\n            <div className='contact-item'>\r\n              <p>\r\n                <span>\r\n                  <i className='fa fa-envelope-o'></i> Email\r\n                </span>{' '}\r\n                {props.data ? props.data.email : 'loading'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12'>\r\n            <div className='row'>\r\n              <div className='social'>\r\n                <ul>\r\n                  <li>\r\n                    <a href={props.data ? props.data.facebook : '/'}>\r\n                      <i className='fa fa-facebook'></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={props.data ? props.data.twitter : '/'}>\r\n                      <i className='fa fa-twitter'></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={props.data ? props.data.youtube : '/'}>\r\n                      <i className='fa fa-youtube'></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id='footer'>\r\n        <div className='container text-center'>\r\n          <p>\r\n            &copy; 2022 All right reserve\r\n            \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Features } from \"./components/features\";\r\nimport { About } from \"./components/about\";\r\nimport { Services } from \"./components/services\";\r\nimport { Gallery } from \"./components/gallery\";\r\nimport { Testimonials } from \"./components/testimonials\";\r\nimport { Team } from \"./components/Team\";\r\nimport { Contact } from \"./components/contact\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n    \r\n      <About data={landingPageData.About} />\r\n      <Services data={landingPageData.Services} />\r\n      <Gallery data={landingPageData.Carrer}/>\r\n      {/* <Testimonials data={landingPageData.Testimonials} /> */}\r\n      <Team data={landingPageData.Team} />\r\n      <Contact data={landingPageData.Contact} />\r\n      {/* <Features data={landingPageData.Features} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}